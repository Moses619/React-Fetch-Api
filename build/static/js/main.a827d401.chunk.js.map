{"version":3,"sources":["ContactCard.js","App.js","reportWebVitals.js","index.js"],"names":["ContactCard","props","useState","showAge","setShowAge","className","src","avatarUrl","alt","name","email","onClick","age","App","results","setResults","useEffect","fetch","then","response","json","data","console","log","map","result","index","picture","large","first","last","dob","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAsBiBA,EAnBG,SAACC,GACjB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKC,IAAKL,EAAMM,UAAWC,IAAI,YAC/B,sBAAKH,UAAU,eAAf,UACE,uCAAUJ,EAAMQ,QAChB,wCAAWR,EAAMS,SACjB,wBAAQC,QAAS,kBAAMP,GAAYD,IAAnC,wBAGDA,GAAW,sCAASF,EAAMW,cCsBpBC,EA9BH,WAEV,MAA8BX,mBAAS,IAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KAaE,OAXFC,qBAAU,WACRC,MAAM,wCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZN,EAAWM,EAAKP,cAEjB,IAKF,8BACGA,EAAQU,KAAI,SAACC,EAAQC,GACnB,OACE,cAAC,EAAD,CACEnB,UAAWkB,EAAOE,QAAQC,MAC1BnB,KAAMgB,EAAOhB,KAAKoB,MAAQ,IAAMJ,EAAOhB,KAAKqB,KAC5CpB,MAAOe,EAAOf,MACdE,IAAKa,EAAOM,IAAInB,KAJAc,SCdfM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.a827d401.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\r\n\r\n\r\nconst ContactCard = (props) => {\r\n    const [showAge, setShowAge] = useState(false);\r\n    \r\n    return (\r\n      <div className=\"contact-card\">\r\n        <img src={props.avatarUrl} alt=\"profile\"></img>\r\n        <div className=\"user-details\">\r\n          <p>Name: {props.name}</p>\r\n          <p>Email: {props.email}</p>\r\n          <button onClick={() => setShowAge(!showAge)}>\r\n\t\t\tToggle Age \r\n\t\t</button>\r\n        {showAge && <p>Age: {props.age}</p>}\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default ContactCard;\r\n  ","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport ContactCard from \"./ContactCard\";\n\n\n//import './App.css';\n\nconst App = () => {\n  \n  const [results, setResults] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/?results=5\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        setResults(data.results)\n      });\n    }, [])\n \n\n\n    return (\n     <div>\n       {results.map((result, index) => {\n          return (\n            <ContactCard key={index}\n              avatarUrl={result.picture.large}\n              name={result.name.first + \" \" + result.name.last}\n              email={result.email}\n              age={result.dob.age}/>\n          )\n        })}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}